// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

vector<string> findMatchedWords(vector<string> dict,string pattern);

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		vector<string> s(n);
		for(int i=0;i<n;i++)
		    cin>>s[i];
		
		string tt;
		cin>>tt;
		
		vector<string> res = findMatchedWords(s,tt);
        sort(res.begin(),res.end());
		for(int i=0;i<res.size();i++)
		    cout<<res[i]<<" ";
		cout<<endl;
		
	}
}// } Driver Code Ends


/* The function returns a  vector of strings 
present in the dictionary which matches
the string pattern.
You are required to complete this method */
vector<string> findMatchedWords(vector<string> dict,string pattern)
{
       map<char , int>m;
       for(int i=0;i<pattern.length();i++){
           m[pattern[i]]++;
       }
       vector<string> vec;
       for(int i=0;i<dict.size();i++){
           if(dict[i].length() == pattern.length()){
               map< char , int> l;
               for(int j=0;j<pattern.length();j++){
                   l[dict[i][j]]++;
               }
               bool gu=true;
               for(int j=0;j<pattern.length();j++){
                   if(l[dict[i][j]] != m[pattern[j]]){gu=false;break;}
               }
               if(gu){vec.push_back(dict[i]);}
           }
       }
       sort(vec.begin() , vec.end());
       return vec;
}
